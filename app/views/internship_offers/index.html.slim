= render "title", internship_offers: @internship_offers

- if user_signed_in? && current_user.respond_to?(:school) && current_user.school
  .row.bt-1.bt-light
    = react_component("SearchInternshipOffer",
                      { url: internship_offers_path,
                        algoliaApiId: Credentials.enc(:algolia, :app_id, prefix_env: false),
                        algoliaApiKey: Credentials.enc(:algolia, :api_key, prefix_env: false),
                        sectors: Sector.all.map { |s| s.as_json(only: [:id, :name, :external_url]) },
                        currentCitySearch: params[:city],
                        currentSchool: current_user.school.as_json(only: [:name]),
                        currentSector: current_sector.as_json(only: [:id, :name, :external_url]) },
                      { class: 'col-12 bg-light px-3 pt-3 filter-section' })

- if @internship_offers.blank?
  .row
    p.col-12[style='color: gray'] Aucune offre disponible
- else
  .row= render partial: "internship_offer", collection: @internship_offers

  .row.mt-3
    .col-12= paginate(@internship_offers, params: params[:sector_id] ? {sector_id: params[:sector_id]} : {})
